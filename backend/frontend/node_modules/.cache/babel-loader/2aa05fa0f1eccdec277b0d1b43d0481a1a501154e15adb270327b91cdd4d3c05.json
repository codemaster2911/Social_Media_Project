{"ast":null,"code":"import axios from \"axios\";\nexport const likePost = id => async dispatch => {\n  try {\n    dispatch({\n      type: \"likeRequest\"\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/post/${id}`);\n    dispatch({\n      type: \"likeSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"likeFailure\",\n      payload: error.response.data.message\n    });\n  }\n};\nexport const addCommentOnPost = (id, comment) => async dispatch => {\n  try {\n    dispatch({\n      type: \"addCommentRequest\"\n    });\n    const {\n      data\n    } = await axios.put(`/api/v1/post/comment/${id}`, {\n      comment\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: \"addCommentSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"addCommentFailure\",\n      payload: error.response.data.message\n    });\n  }\n};\nexport const createNewPost = (caption, image) => async dispatch => {\n  try {\n    dispatch({\n      type: \"newPostRequest\"\n    });\n    const {\n      data\n    } = await axios.post(`/api/v1/post/upload`, {\n      caption,\n      image\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: \"newPostSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"newPostFailure\",\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updatePost = (caption, id) => async dispatch => {\n  try {\n    dispatch({\n      type: \"updateCaptionRequest\"\n    });\n    const {\n      data\n    } = await axios.put(`/api/v1/post/${id}`, {\n      caption\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: \"updateCaptionSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"updateCaptionFailure\",\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    dispatch({\n      type: \"deletePostRequest\"\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/post/${id}`);\n    dispatch({\n      type: \"deletePostSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deletePostFailure\",\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deleteCommentOnPost = (id, commentId) => async dispatch => {\n  try {\n    dispatch({\n      type: \"deleteCommentRequest\"\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/post/comment/${id}`, {\n      data: {\n        commentId\n      }\n    });\n    dispatch({\n      type: \"deleteCommentSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deleteCommentFailure\",\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["axios","likePost","id","dispatch","type","data","get","payload","message","error","response","addCommentOnPost","comment","put","headers","createNewPost","caption","image","post","updatePost","deletePost","delete","deleteCommentOnPost","commentId"],"sources":["D:/transfer_folder/codes/website_project/social_media/Social-Media-Website/frontend/src/Components/Actions/Post.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"likeRequest\",\n    });\n    const { data } = await axios.get(`/api/v1/post/${id}`);\n    dispatch({\n      type: \"likeSuccess\",\n      payload: data.message,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"likeFailure\",\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const addCommentOnPost = (id, comment) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"addCommentRequest\",\n    });\n    const { data } = await axios.put(\n      `/api/v1/post/comment/${id}`,\n      {\n        comment,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    dispatch({\n      type: \"addCommentSuccess\",\n      payload: data.message,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"addCommentFailure\",\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const createNewPost = (caption, image) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"newPostRequest\",\n    });\n    const { data } = await axios.post(\n      `/api/v1/post/upload`,\n      {\n        caption,\n        image,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    dispatch({\n      type: \"newPostSuccess\",\n      payload: data.message,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"newPostFailure\",\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const updatePost = (caption, id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"updateCaptionRequest\",\n    });\n    const { data } = await axios.put(\n      `/api/v1/post/${id}`,\n      {\n        caption,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    dispatch({\n      type: \"updateCaptionSuccess\",\n      payload: data.message,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"updateCaptionFailure\",\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"deletePostRequest\",\n    });\n    const { data } = await axios.delete(`/api/v1/post/${id}`);\n    dispatch({\n      type: \"deletePostSuccess\",\n      payload: data.message,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deletePostFailure\",\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const deleteCommentOnPost = (id, commentId) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"deleteCommentRequest\",\n    });\n\n    const { data } = await axios.delete(`/api/v1/post/comment/${id}`, {\n      data: { commentId },\n    });\n    dispatch({\n      type: \"deleteCommentSuccess\",\n      payload: data.message,\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deleteCommentFailure\",\n      payload: error.response.data.message,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}